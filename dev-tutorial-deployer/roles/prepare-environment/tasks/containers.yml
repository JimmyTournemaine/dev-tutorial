---

- name: Create the containers network
  docker_network:
    name: "dev-tutorial-network-{{ inventory_hostname }}"
  tags:
    - build

- name: Create the database container
  docker_container:
    name: "dev-tutorial-mongo-{{ inventory_hostname }}"
    image: mongo
    state: "{{ prepare_env_containers_state }}"
    restart: "{{ prepare_env_containers_state == 'started' and prepare_env_force }}"
    log_driver: none
    ports:
      - "27017:27017"
    networks:
      - name: "dev-tutorial-network-{{ inventory_hostname }}"
    networks_cli_compatible: no
  register: db_cont_metadata
  tags:
    - build

- name: Create the backend container
  docker_container:
    name: "dev-tutorial-api-{{ inventory_hostname }}"
    image: "dev-tutorial-api-{{ inventory_hostname }}"
    state: "{{ prepare_env_containers_state }}"
    restart: "{{ prepare_env_containers_state == 'started' and prepare_env_force_api }}"
    command: "{{ prepare_env_backend_command | default(omit) }}"
    tty: yes
    volumes:
      - "{{ deployer_hosted_workspace }}/dev-tutorial-api:/usr/src/app/api"
      - "/usr/src/app/api/node_modules"
    ports:
      - "3000:3000"
    networks:
      - name: "dev-tutorial-network-{{ inventory_hostname }}"
    networks_cli_compatible: no
    env: "{{ prepare_env_container_env_backend }}"
  register: backend_cont_metadata
  tags:
    - build
    - api

- name: Wait for backend inititalization
  uri:
    url: http://{{ deployer_host }}:3000/api/tuto
  register: _result
  until: _result.status == 200
  retries: 10
  delay: 5
  when:
    - "prepare_env_containers_state == 'started'"
    - "prepare_env_wait_for_init"
  tags:
    - build
    - api

- name: Create the frontend container
  docker_container:
    name: "dev-tutorial-app-{{ inventory_hostname }}"
    image: "dev-tutorial-app-{{ inventory_hostname }}"
    state: "{{ prepare_env_containers_state }}"
    restart: "{{ prepare_env_containers_state == 'started' and prepare_env_force_app }}"
    command: "{{ prepare_env_frontend_command | default(omit) }}"
    tty: yes
    volumes:
      - "{{ deployer_hosted_workspace }}/dev-tutorial-app:/usr/src/app/app-ui"
      - "/usr/src/app/app-ui/node_modules"
    ports:
      - "4200:4200"
    networks:
      - name: "dev-tutorial-network-{{ inventory_hostname }}"
    networks_cli_compatible: no
  register: frontend_cont_metadata
  tags:
    - build
    - app

- name: Wait for frontend inititalization
  uri:
    url: http://{{ deployer_host }}:4200
  register: _result
  until: _result.status == 200
  retries: 10
  delay: 30
  when: 
    - "prepare_env_containers_state == 'started'"
    - "prepare_env_wait_for_init"
  tags:
    - build
    - app
