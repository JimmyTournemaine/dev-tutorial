---
# Pull standard images

- name: Pull the database image
  docker_image:
    name: mongo
    source: pull
  tags:
    - build
    - api

# Generate Dockerfiles

- name: Generate .dockerignore
  template:
    src: "dockerfiles/.dockerignore.j2"
    dest: "{{ item }}"
    mode: 0644
  loop:
    - "{{ deployer_local_workspace }}/dev-tutorial-api/.dockerignore"
    - "{{ deployer_local_workspace }}/dev-tutorial-app/.dockerignore"
  tags:
    - build
    - api
    - app
    - dockerfiles

- name: Generate the backend Dockerfile
  template:
    src: "dockerfiles/Dockerfile.api.j2"
    dest: "{{ deployer_local_workspace }}/dev-tutorial-api/Dockerfile"
    mode: 0644
  register: backend_dockerfile
  tags:
    - build
    - api
    - dockerfiles

- name: Generate the frontend Dockerfile
  template:
    src: "dockerfiles/Dockerfile.app.j2"
    dest: "{{ deployer_local_workspace }}/dev-tutorial-app/Dockerfile"
    mode: 0644
  register: frontend_dockerfile
  tags:
    - build
    - app
    - dockerfiles

# Build images from generated Dockerfiles

- name: Build the backend image
  docker_image:
    name: "dev-tutorial-api"
    build:
      path: "{{ deployer_local_workspace }}/dev-tutorial-api"
      pull: "{{ rebuild }}"
      rm: yes
      nocache: "{{ rebuild }}"
    state: present
    source: build
    force_source: "{{ rebuild }}"
  vars:
    rebuild: "{{ True in rebuild_conditions }}"
    rebuild_conditions:
      - "{{ dockerize_force_api_image | bool }}"
      - "{{ backend_dockerfile is changed }}"
  tags:
    - build
    - api

- name: Build the frontend image
  docker_image:
    name: "dev-tutorial-app"
    build:
      path: "{{ deployer_local_workspace }}/dev-tutorial-app"
      pull: "{{ rebuild }}"
      rm: yes
      nocache: "{{ rebuild }}"
    state: present
    source: build
    force_source: "{{ rebuild }}"
  vars:
    rebuild: "{{ True in rebuild_conditions }}"
    rebuild_conditions:
      - "{{ dockerize_force_app_image | bool }}"
      - "{{ frontend_dockerfile is changed }}"
  tags:
    - build
    - app

- name: Find the tutorials directories
  find:
    paths: "{{ deployer_local_workspace }}/dev-tutorial-api/tutorials"
    recurse: no
    file_type: directory
  register: tutorial_directories
  tags:
    - build
    - tutorials

- name: Build the tutorials images
  docker_image:
    name: "{{ item | basename }}"
    build:
      path: "{{ item | dirname }}"
      pull: "{{ dockerize_force }}"
      rm: yes
      nocache: "{{ dockerize_force }}"
    state: present
    source: build
    force_source: "{{ dockerize_force }}"
  loop: "{{ tutorial_directories.files | map(attribute='path') | list }}"
  loop_control:
    label: "{{ item | basename }}"
  tags:
    - build
    - tutorials
